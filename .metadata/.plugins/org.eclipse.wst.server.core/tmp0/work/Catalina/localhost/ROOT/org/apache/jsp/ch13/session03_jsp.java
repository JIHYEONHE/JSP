/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-10-17 07:08:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch13;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Enumeration;

public final class session03_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1664261832316L));
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/4.MiddleProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/JSPBook/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Enumeration");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Session</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- session 기본(내장) 객체 \r\n");
      out.write("\t1. 세션을 사용한다는 것은 session 기본 객체를 사용한다는 의미\r\n");
      out.write("\t2. session 객체는 속성(attribute)을 제공함.\r\n");
      out.write("\t\t- setAttribute() : 속성에 값 set 메소드\r\n");
      out.write("\t\t- getAttribute() : 속성에 값 get 메소드\r\n");
      out.write(" \t3. 웹 브라우저(크롬, 엣지, 파이어폭스, 웨일, 오페라)마다 별도의 세션을 가짐\r\n");
      out.write(" \t4. 웹 브라우저마다 각 세션을 구분하기 위해 세션마다 고유 ID를 할당(세션 ID).\r\n");
      out.write(" \t\t- session.getId() : 세션의 고유ID를 구함\r\n");
      out.write(" \t5. 1) 웹 서버(톰켓)는 웹 브라우저(크롬)에 세션ID를 전송\r\n");
      out.write(" \t   2) 웹 브라우저는 웹 서버에 요청시 마다 매번 세션ID를 보내서(쿠키에 넣어서)\r\n");
      out.write(" \t   \t     웹 서버(톰캣)가 어떤 세션(웹 브라우저)를 사용할지 판단할 수 있게 함\r\n");
      out.write("\t6. 웹 서버(톰캣)은 세션ID를 이용하여 웹 브라우저를 위한 세션을 찾음\r\n");
      out.write("\t      세션 ID를 공유하기 위해 쿠키를 사용함(JSESSIONID)\r\n");
      out.write("\t   JSESSIONID 쿠키가 세션ID를 공유할 때 사용하는 쿠키임\r\n");
      out.write(" -->\r\n");
      out.write(" \t이 웹 브라우저의  세션ID : ");
      out.print(session.getId() );
      out.write("\r\n");
      out.write(" \t<hr />\r\n");
      out.write(" \t");

 		//세션의 속성 명
 		String name;
 		//세션의 속성에 setting된 값(value)
 		String value;
 		//세션 객체에 담겨있는 모든 속셩 명을 열거형 타입으로 가져옴
 		Enumeration en = session.getAttributeNames();
 		int i = 0;
 		//다음 요소가 없을때까지 반복
 		while(en.hasMoreElements()){
 			i++;
// 			{"userId","userPW"}
 			name = en.nextElement().toString();//userId
 			//session.getAttribute("userID")
 			value = session.getAttribute(name).toString();//admin
 			out.println("설정된 세션의 속성 이름[" + i + "] :" + name + "<br />");
 			out.println("설정된 세션의 속성 값[" + i + "] :" + value + "<br />");
 		}
 		
 	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
